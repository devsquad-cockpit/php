<?php

namespace Cockpit\Php\Commands;

use Cockpit\Php\Exceptions\CockpitErrorHandler;
use Exception;
use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Logger\ConsoleLogger;
use Symfony\Component\Console\Output\OutputInterface;

#[AsCommand(
    name: 'test',
    description: 'Send fake data to webhook'
)]
class TestCockpitCommand extends Command
{
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $logger = new ConsoleLogger($output);

        if (!getenv('COCKPIT_URL')) {
            $logger->error('You must fill COCKPIT_ROUTE env with a valid cockpit endpoint');

            return Command::FAILURE;
        }

        /** @var CockpitErrorHandler $errorHandler */
        $errorHandler = new CockpitErrorHandler();
        $errorHandler->write([
            'context' => [
                'exception' => new Exception('Test generated by the cockpit:test command'),
            ],
        ]);

        $link = getenv('COCKPIT_URL');

        if ($errorHandler->failed() === true || $errorHandler->failed() === null) {
            $logger->error('We couldn\'t reach Cockpit Server at ' . $link);
            $logger->error($errorHandler->reason());

            return Command::FAILURE;
        }

        $output->writeln("<info>Cockpit reached successfully. We sent a test Exception that has been registered.</info>");

        return Command::SUCCESS;
    }
}
